<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.abdts.dao.teacher.MenuDao">

	<select id="get" resultType="MenuDO">
		select
        `menu_id`,
        `parent_id`,
        `name`,
        `url`,
        `perms`,
        `type`,
        `icon`,
        `order_num`,
        `createtime`
		from  public_menu where menu_id = #{value}
	</select>

	<select id="list" resultType="MenuDO">
		select
        `menu_id`,
        `parent_id`,
        `name`,
        `url`,
        `perms`,
        `type`,
        `icon`,
        `order_num`,
        `createtime`
		from  public_menu
		<where>
			<if test="menuId != null and menuId != ''"> and menu_id = #{menuId},</if>
			<if test="parentId != null and parentId != ''"> and parent_id = #{parentId},</if>
			<if test="name != null and name != ''"> and name = #{name},</if>
			<if test="url != null and url != ''"> and url = #{url},</if>
			<if test="perms != null and perms != ''"> and perms = #{perms},</if>
			<if test="type != null and type != ''"> and type = #{type},</if>
			<if test="icon != null and icon != ''"> and icon = #{icon},</if>
			<if test="orderNum != null and orderNum != ''"> and order_num = #{orderNum},</if>
			<if test="createtime != null"> and createtime = #{createtime},</if>
		</where>
	</select>

	<select id="count" resultType="int">
		select count(menu_id) from  public_menu
		<where>
            <if test="menuId != null and menuId != ''"> and menu_id = #{menuId},</if>
            <if test="parentId != null and parentId != ''"> and parent_id = #{parentId},</if>
            <if test="name != null and name != ''"> and name = #{name},</if>
            <if test="url != null and url != ''"> and url = #{url},</if>
            <if test="perms != null and perms != ''"> and perms = #{perms},</if>
            <if test="type != null and type != ''"> and type = #{type},</if>
            <if test="icon != null and icon != ''"> and icon = #{icon},</if>
            <if test="orderNum != null and orderNum != ''"> and order_num = #{orderNum},</if>
            <if test="createtime != null"> and createtime = #{createtime},</if>
		</where>
	</select>

	<insert id="save" parameterType="MenuDO"
		useGeneratedKeys="true" keyProperty="menuId">
		insert into  public_menu
		(
		`parent_id`,
		`name`,
		`url`,
		`perms`,
		`type`,
		`icon`,
		`order_num`,
		`createtime`,
		)
		values
		(
		#{parentId},
		#{name},
		#{url},
		#{perms},
		#{type},
		#{icon},
		#{orderNum},
		#{createtime},
		)
	</insert>

	<update id="update" parameterType="MenuDO">
		update  public_menu
		<set>
            <if test="parentId != null and parentId != ''"> and parent_id = #{parentId},</if>
            <if test="name != null and name != ''"> and name = #{name},</if>
            <if test="url != null and url != ''"> and url = #{url},</if>
            <if test="perms != null and perms != ''"> and perms = #{perms},</if>
            <if test="type != null and type != ''"> and type = #{type},</if>
            <if test="icon != null and icon != ''"> and icon = #{icon},</if>
            <if test="orderNum != null and orderNum != ''"> and order_num = #{orderNum},</if>
            <if test="createtime != null"> and createtime = #{createtime},</if>
		</set>
		where menu_id = #{menuId}
	</update>

	<delete id="remove">
		delete from  public_menu where menu_id = #{value}
	</delete>

	<delete id="batchRemove">
		delete from  public_menu where menu_id in
		<foreach item="menuId" collection="array" open="(" separator=","
			close=")">
			#{menuId}
		</foreach>
	</delete>

	<select id="listMenuByUserId" resultType="com.abdts.entity.teacher.MenuDO">
		select distinct m.menu_id , parent_id, `name`, url,
		perms,`type`,icon,order_num,createtime
		from  public_menu m
		join public_role_menu rm on m.menu_id = rm.menu_id
        join public_teacherlist_role ur on rm.role_id =ur.role_id
        where ur.user_id = #{id}
		and m.type in(0,1)
		order by m.order_num
	</select>

	<select id="listUserPerms" resultType="string">
		select distinct m.perms
		from  public_menu m
        join public_role_menu rm on m.menu_id = rm.menu_id
		join public_teacherlist_role ur on rm.role_id = ur.role_id
        where ur.user_id = #{id}
        and m.type in(0,1)
        order by m.order_num
	</select>
</mapper>